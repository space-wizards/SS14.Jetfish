@if (Override)
{
    @ChildContent
    return;
}

<AuthorizeView Resource="@Resource" Policy="@Policy">
    <Authorized>
        @ChildContent
    </Authorized>
    <NotAuthorized>
        @if (DisplayError)
        {
            @if (CustomError == null)
            {
                <MudOverlay Visible="true" DarkBackground="true">
                    <MudContainer class="d-flex flex-column justify-center align-center " Style="height: calc(100vh - 64px);">
                        <MudImage Width="320" ObjectFit="ObjectFit.Contain" Src="https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExZTV3MGhkNDcybDFvcGl0cnhhY3A5aW4zeHlxdjJxNDZhYmQ3ODAwcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/yx400dIdkwWdsCgWYp/giphy.gif"></MudImage>
                        <MudText Typo="Typo.h3" style="align-content: center;" class="mt-4">You don't have access to this @ResourceName.</MudText>
                    </MudContainer>
                </MudOverlay>
            }
            else
            {
                @CustomError
            }
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? CustomError { get; set; }

    [Parameter]
    public string ResourceName { get; set; } = "Resource";

    [Parameter]
    public string Policy { get; set; } = null!;

    [Parameter]
    public object? Resource { get; set; }

    [Parameter]
    public bool DisplayError { get; set; }

    /// <summary>
    /// If set, will not perform any checks and will just assume you have access.
    /// </summary>
    [Parameter]
    public bool Override { get; set; } = false;
}
