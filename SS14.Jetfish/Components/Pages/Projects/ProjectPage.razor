@page "/projects/{projectId:guid}"
@using SS14.Jetfish.FileHosting.Model
@using SS14.Jetfish.Projects.Model
@attribute [AllowAnonymous]

@if (_isLoading)
{
    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" Class="loading-spinner"/>
    return;
}

@if(Project == null)
{
    <p>Project not found</p>
    return;
}

<AuthorizeResource Override="@Project.Public" ResourceName="project" Policy="@(nameof(Permission.ProjectRead))" Resource="@ProjectId" DisplayError="true">
    <PageTitle>@Project.Name</PageTitle>
    <SectionContent SectionName="page-title">@Project.Name</SectionContent>
    <SectionContent SectionName="page-tools">
        <AuthorizeResource ResourceName="project" Policy="@(nameof(Permission.ProjectEdit))" Resource="@ProjectId" DisplayError="false">
            <MudButton Variant="Variant.Text" EndIcon="@Icons.Material.Filled.Edit" OnClick="OpenEditDialog">Edit project</MudButton>
        </AuthorizeResource>
    </SectionContent>
    <div class="project-background" style="@GetBackground()">
        <ContentImage Fluid="true" Style="width: 100%;" Type="FileType.Project" ProjectId="@Project.Id" FileId="@(Guid.Parse(Project.Background))"></ContentImage>
    </div>
    <div style="display:contents;">
        <div class="board-container">
            <MudDropContainer T="TaskItem" @ref="_dropContainer" ItemsSelector="@((item, s) => item.ListTitle == s)" Items="@_tasks" ItemDropped="CardUpdated" Class="board gap-2">
                <ChildContent>
                    @foreach (var item in _sections)
                    {
                        <MudPaper Elevation="0" Class="lane-row">
                            <MudToolBar Class="pa-3" Gutters="false" Dense="true" Style="--mud-internal-toolbar-height: 2rem;">
                                @if (item.EditLaneOpen)
                                {
                                    <MudTextField Error="@(item.EditLaneError != null)" ErrorText="@item.EditLaneError" OnBlur="@(() => SetLaneName(item))" AutoFocus="true" MaxLength="Lane.ListTitleMaxLength" @bind-Value="@item.EditLaneName" AdornmentIcon="@Icons.Material.Filled.Edit"></MudTextField>
                                }
                                else
                                {
                                    <MudText Style="cursor: pointer; font-size: 1rem" Typo="Typo.h6" @onclick="@(args => item.EditLaneOpen = true)">@item.BackingLane.Title</MudText>
                                }
                                <MudSpacer/>
                                <MudMenu Icon="@Icons.Material.Rounded.MoreHoriz" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" ListClass="pa-2 d-flex flex-column" PopoverClass="mud-elevation-25">
                                    <AuthorizeResource DisplayError="false" Policy="@(nameof(Permission.ProjectEdit))" Resource="ProjectId">
                                        <MudButton Size="Size.Small" Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete" OnClick="@(args => DeleteSection(item))">Delete section</MudButton>
                                    </AuthorizeResource>
                                </MudMenu>
                            </MudToolBar>
                            <MudContainer Class="overflow-y-auto" Gutters="false">
                                <MudDropZone CanDrop="CheckCanDragAndDrop" T="TaskItem" Identifier="@item.BackingLane.Title" Style="min-height: 10px" AllowReorder="true" Class="mud-height-full px-2" />
                            </MudContainer>
                            <AuthorizeResource DisplayError="false" Policy="@(nameof(Permission.ProjectCardCreate))" Resource="ProjectId">
                                @if (item.NewTaskOpen)
                                {
                                    <MudContainer Gutters="false" Class="px-2">
                                        <MudPaper Elevation="25" Class="pa-2 mt-1 rounded-lg focus-within-outline">
                                            <MudTextField @bind-Value="item.NewTaskName" AutoFocus="true" Placeholder="New Task" Underline="false" Margin="Margin.Dense" Class="mx-2"></MudTextField>
                                        </MudPaper>
                                        <MudStack Row="true" Class="my-2">
                                            <MudButton OnClick="@(() => AddTask(item))" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary" FullWidth="true">Add task</MudButton>
                                            <MudIconButton OnClick="@(() => item.NewTaskOpen = false)" Variant="Variant.Outlined" Size="Size.Small" Icon="@Icons.Material.Filled.Close" Class="border-transparent"/>
                                        </MudStack>
                                    </MudContainer>
                                }
                                else
                                {
                                    <MudButton OnClick="@(() => item.NewTaskOpen = !item.NewTaskOpen)" StartIcon="@Icons.Material.Filled.Add" FullWidth="true" Class="rounded-lg py-2">Add task</MudButton>
                                }
                            </AuthorizeResource>
                        </MudPaper>
                    }

                    <AuthorizeResource DisplayError="false" Policy="@(nameof(Permission.ProjectEdit))" Resource="ProjectId">
                        <MudPaper Class="lane-row" Elevation="0">
                            @if (_addSectionOpen)
                            {
                                <MudPaper Elevation="0" Width="224px" Class="pa-4 d-flex flex-column mud-background-gray rounded-lg">
                                    <EditForm Model="@_newSectionModel" OnValidSubmit="OnValidSectionSubmit">
                                        <DataAnnotationsValidator />
                                        <MudTextField @bind-Value="_newSectionModel.Name" For="@(() => _newSectionModel.Name)" Placeholder="New section" Underline="false"></MudTextField>
                                        <MudButton ButtonType="ButtonType.Submit" Size="Size.Small" Color="Color.Primary" FullWidth="true">Add section</MudButton>
                                    </EditForm>
                                </MudPaper>
                            }
                            else
                            {
                                <MudButton OnClick="OpenAddNewSection" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Class="rounded-lg py-2" FullWidth="true">Add section</MudButton>
                            }
                        </MudPaper>
                    </AuthorizeResource>
                </ChildContent>

                <ItemRenderer>
                    <MudCard Style="margin: 6px; overflow: clip" @onclick="@(() => OpenCard(context))">
                        <MudCardContent>
                            <MudText Typo="Typo.body1">@context.Title</MudText>
                        </MudCardContent>
                    </MudCard>
                </ItemRenderer>
            </MudDropContainer>
        </div>
    </div>
</AuthorizeResource>
